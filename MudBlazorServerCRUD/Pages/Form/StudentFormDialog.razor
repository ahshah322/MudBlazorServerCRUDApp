@inject IStudentService StudentService
@inject IGenderService GenderService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@* <MudText Typo="Typo.h5">@btnText</MudText> *@

<MudDialog>
    <DialogContent>
        <MudForm Model="@_student" @ref="form">
            <MudGrid>
                <MudItem xs="6">
                        <MudTextField @bind-Value="_student.Name" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Name" Required="true" RequiredError="User name is required!" />
                        <MudTextField @bind-Value="_student.Email" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Email" Required="true" RequiredError="Email is required!"
                                      Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid"} )" />
                                        <MudDatePicker Variant="Variant.Outlined" Label="Birth Date" Class="my-3" Editable="true" PickerVariant="PickerVariant.Dialog"
                               @bind-Date="_student.DateOfBirth" Margin="Margin.Dense" />
                </MudItem>
                <MudItem xs="6">
                        <MudList T="string">
                            <MudListItem Class="pa-0">
                                <MudTextField  Margin="Margin.Dense" Variant="Variant.Outlined" Label="Subject" @bind-Value="_newGrade.Subject" Required="true" RequiredError="Subject is required!" />
                                <MudNumericField  Margin="Margin.Dense" Variant="Variant.Outlined" Label="Score" @bind-Value="_newGrade.Score" Min="0" Max="100" Required="true" RequiredError="Score is required!" />
                                <MudButton Class="my-2 float-end" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary" OnClick="AddGrade">Add Grade</MudButton>
                            </MudListItem>
                        </MudList>
                        @* <MudTable Items="_student.Grades">
                <HeaderContent>
                    <MudTh>Subject</MudTh>
                    <MudTh>Score</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Subject"></MudTd>
                    <MudTd DataLabel="Score"></MudTd>
                </RowTemplate>
            </MudTable> *@
                </MudItem>
            </MudGrid>
                
          
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" FullWidth="true">Cancel</MudButton>
        <MudButton OnClick="@(()=> Submit())" Variant="Variant.Filled" Color="Color.Success" FullWidth="true">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private MudDataGrid<Student> _studentDataGrid;
    private bool added = false;
    MudForm form;
    private Student _student = new Student();
    private Grade _newGrade = new Grade();

    private void Cancel() => MudDialog.Cancel();

    private async Task AddGrade()
    {
        //_student.Grades.Add(new Grade { Subject = _newGrade.Subject, Score = _newGrade.Score });
        _newGrade = new Grade();
    }

    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            await StudentService.CreateStudent(_student);
            NavigationManager.NavigateTo("/", true);
            Snackbar.Add("Student updated successfuly!", Severity.Success);
        }
    }
}
