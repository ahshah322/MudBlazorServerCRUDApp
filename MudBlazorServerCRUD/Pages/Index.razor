@page "/"
@using System.Net.Http.Json
@using MudBlazorServerCRUD.Model
@using System.Collections.ObjectModel
@using System.ComponentModel.DataAnnotations

@inject IStudentService StudentService
@inject IGenderService GenderService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudText Typo="Typo.h6">Students</MudText>

<MudDataGrid T="Student" FilterMode="DataGridFilterMode.ColumnFilterRow" Bordered="true"
             MultiSelection="false" Items="@FilteredStudents" SortMode="SortMode.Multiple" Dense
             Filterable="true" FilterCaseSensitivity="@_caseSensitivity" QuickFilter="@_quickFilterStudent" Striped="true" EditTrigger="DataGridEditTrigger.Manual"
             Hideable="true" EditMode="@_filterMode" ReadOnly="@_readOnly">
    <ToolBarContent>
        <MudButton Variant="Variant.Filled" Class="my-3 ml-auto" Color="Color.Success" OnClick="(() => AddStudentAsync(new Student()))" Size="Size.Small" StartIcon="@Icons.Material.Filled.Add">Add Student</MudButton>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns> 
        <PropertyColumn Property="x => x.Name" SortBy="@_sortBy">
            <FilterTemplate>
                <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                     <MudTextField Value="@_nameSearchFilter" T="string" Immediate="true" ValueChanged="@((x) => _nameSearchFilter = x)"></MudTextField>
                     <MudIconButton OnClick="@(() => _nameSearchFilter = string.Empty)"
                         Icon="@(string.IsNullOrEmpty(_nameSearchFilter) ? Icons.Material.Filled.FilterAlt : Icons.Material.Filled.FilterAltOff)" Size="@Size.Small" />
                 </MudStack>
             </FilterTemplate>
         </PropertyColumn>
         <PropertyColumn Property="x => x.Email" Title="Email">
             <FilterTemplate>
                 <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                     <MudTextField Value="@_emailSearchFilter" T="string" Immediate="true" ValueChanged="@((x)=> _emailSearchFilter = x)"></MudTextField>
                     <MudIconButton OnClick="@(() => _emailSearchFilter = string.Empty)"
                                    Icon="@(string.IsNullOrEmpty(_emailSearchFilter) ? Icons.Material.Filled.FilterAlt : Icons.Material.Filled.FilterAltOff)" Size="@Size.Small" />
                 </MudStack>
             </FilterTemplate>
         </PropertyColumn>
         <PropertyColumn Property="x => x.Gender.Name" HeaderStyle="min-width: 170px;" Title="Genders">
             <FilterTemplate>
                 <MudStack Row>
                    <MudSelect Value="@_genderSearchFilter" Dense AnchorOrigin="Origin.BottomCenter" ValueChanged="@((x) => _genderSearchFilter = x)" Margin="Margin.Dense" T="Gender" Variant="Variant.Text">
                        @foreach (var item in GenderService.Genders)
                        {
                            <MudSelectItem Value="item">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                    <MudIconButton OnClick="@(() => _genderSearchFilter = null)"
                                   Icon="@(_genderSearchFilter == null ? Icons.Material.Filled.FilterAlt : Icons.Material.Filled.FilterAltOff)" Size="@Size.Small" />
                </MudStack>
            </FilterTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Marks" Title="Marks">
            <FilterTemplate>
                <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                     <MudNumericField Value="@_marksSearchFilter" T="int" Immediate="true" ValueChanged="@((x)=> _marksSearchFilter = x)"></MudNumericField>
                     <MudIconButton OnClick="@(() => _marksSearchFilter = 0)"
                         Icon="@(_marksSearchFilter == 0 ? Icons.Material.Filled.FilterAlt : Icons.Material.Filled.FilterAltOff)" Size="@Size.Small" />
                 </MudStack>
             </FilterTemplate>
         </PropertyColumn>
         <PropertyColumn Property="x => x.DateOfBirth" Title="Date Of Birth" CellClass="mt-3">
             <EditTemplate>
                 <MudDatePicker @bind-Date="context.Item.DateOfBirth" Class="mt-3" Margin="Margin.Dense" Variant="Variant.Outlined"
                                Editable="true"
                                DateFormat="dd/MM/yyyy" />
             </EditTemplate>
         </PropertyColumn>
         <TemplateColumn CellClass="">
             <CellTemplate>
                 <MudStack Row>
                    <MudIconButton Size="@Size.Small" Color="Color.Info" Icon="@Icons.Material.Outlined.Edit" OnClick="(() => EditStudentAsync(context.Item))" />
                    <MudIconButton Size="@Size.Small" Color="Color.Error" Icon="@Icons.Material.Outlined.Delete" OnClick="(() => DeleteStudentAsync(context.Item))" />
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <NoRecordsContent>
        No Records added.
    </NoRecordsContent>
    <PagerContent>
        <MudDataGridPager T="Student" />
    </PagerContent>
</MudDataGrid>

<style>
    .mud-popover.mud-popover-open {
        z-index: 1403 !important;
    }
</style>



