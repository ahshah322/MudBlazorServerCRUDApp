// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MudBlazorServerCRUD.Data;

#nullable disable

namespace MudBlazorServerCRUD.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240709073134_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male",
                            NameA = "Man",
                            NameB = "M"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female",
                            NameA = "Woman",
                            NameB = "W"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other",
                            NameA = "Not Mentioned",
                            NameB = "O"
                        });
                });

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            Score = 90,
                            StudentId = 1,
                            Subject = "Math"
                        },
                        new
                        {
                            GradeId = 2,
                            Score = 85,
                            StudentId = 1,
                            Subject = "Science"
                        },
                        new
                        {
                            GradeId = 3,
                            Score = 88,
                            StudentId = 2,
                            Subject = "Math"
                        },
                        new
                        {
                            GradeId = 4,
                            Score = 92,
                            StudentId = 2,
                            Subject = "Science"
                        });
                });

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("Marks")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1996, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali@gmail.com",
                            GenderId = 1,
                            Marks = 0,
                            Name = "ali@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2000, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "shabi@gmail.com",
                            GenderId = 1,
                            Marks = 0,
                            Name = "shabi"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zillay@gmail.com",
                            GenderId = 1,
                            Marks = 0,
                            Name = "zillay"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1993, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zulqar@gmail.com",
                            GenderId = 1,
                            Marks = 0,
                            Name = "zulqar"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elisa@gmail.com",
                            GenderId = 2,
                            Marks = 0,
                            Name = "elisa"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mehrub@gmail.com",
                            GenderId = 3,
                            Marks = 0,
                            Name = "mehrub"
                        });
                });

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Grade", b =>
                {
                    b.HasOne("MudBlazorServerCRUD.Model.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Student", b =>
                {
                    b.HasOne("MudBlazorServerCRUD.Model.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("MudBlazorServerCRUD.Model.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
